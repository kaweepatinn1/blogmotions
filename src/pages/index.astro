---
import Layout from '../layouts/Layout.astro';
import Arrows from '../assets/outarrows.svg?raw';
import $ from 'jquery';
---

<Layout>
	<div id="tabnumber" style="z-index: 1;"></div>
	<div id="body">
		<div id="container-stack-1">
			<div id="mainmenudrag">
				<div id="mainmenu" class="menu1 menu start">
					<div class="grid"></div>
					<div class="outarrow">
						<img id="mover_mainmenudrag" class="title1 outarrow start" src="src/assets/outarrows.svg" draggable="false">
						<!-- <Fragment set:html={Arrows} /> -->
					</div>
					<div class="titlebox">
						<div class="title1 title start" onclick="linkTo('.')">
							[blogmotions v0.0.1]
						</div>
					</div>
					<div class="arrow1 arrow item1 item start">
						>
					</div>
					<div class="textbox">
						<div id="?opt0" class="item1 item start" onclick="menuOption(2)">
							all blogs
						</div>
					</div>
					<div class="textbox">
						<div id="?opt1" class="item1 item start" onclick="menuOption(3)">
							animation & afterfx
						</div>
					</div>
					<div class="textbox">
						<div id="?opt2" class="item1 item start" onclick="menuOption(4)">
							ones, zeros, and lenses
						</div>
					</div>
					<div class="textbox">
						<div id="?opt3" class="item1 item start" onclick="menuOption(5)">
							the set diary
						</div>
					</div>
					<div id="relink" class="titlebox">
						<div class="end title1 title start" onclick="redirectToMainWebsite()">
							nanomotions.org
						</div>
					</div>
				</div>
			</div>
			<div id="animationfx" class="menu3 menu start remove">
				<div class="grid"></div>
				<div class="titlebox">
					<div class="title3 title start" onclick="menuOption(1)">
						&lt;- back to menu
					</div>
				</div>
				<div class="textbox">
					<div id="?afx0" class="item3 item start" onclick="menuOption(0)">
						blog1
					</div>
				</div>
				<div class="textbox">
					<div id="?afx1" class="item3 item start" onclick="menuOption(1)">
						blog2
					</div>
				</div>
				<div class="textbox">
					<div id="?afx2" class="item3 item start" onclick="menuOption(2)">
						blog3
					</div>
				</div>
				<div class="textbox">
					<div id="?afx3" class="item3 item start" onclick="menuOption(3)">
						blog4
					</div>
				</div>
				<div id="relink" class="titlebox">
					<div class="end title3 title start" onclick="redirectToMainWebsite()">
						nanomotions.org
					</div>
				</div>
			</div>
		</div>
	</div>
</Layout>

<style>
	.grid{
		width: 80vw;
		height: 80vw;
		position: absolute;
		background-image: url('../assets/overlay.svg');
		z-index: 100;
		pointer-events: none;
		transition: 0.5s ease-out;
	}
	#body {
		display: flex;
		font-family: 'Helvetica Neue', sans-serif;
		width: 100%;
		height: 100%;
		/* transform: translate(5vw,5vh); */
		overflow: visible;
		background:
		linear-gradient(rgba(190, 149, 218, 0.2), rgba(180, 180, 180, 0.6)),
		url('../assets/noise_black.svg');
	}
	#conatiner-stack-1{
		width: 100vw;
		height: 100vh;
		position: absolute;
		overflow: hidden;
		display: flex;
	}
	#mainmenu {
		position: absolute;
		left: 35vw;
		top: calc(50vh - 10vw);
		display: flex;
		width: 30vw;
		height: 20vw;
		flex-direction: column;
		border:0.15vw solid white;
		background:
		linear-gradient(#1616162a, #0e0e0eda),
		url('../assets/noise_black.svg');
		transition: 0.6s ease-out;
		overflow: hidden;
		z-index: 0;
	}
	#animationfx {
		position: absolute;
		left: 15vw;
		top: calc(50vh - 10vw);
		display: flex;
		width: 30vw;
		height: 20vw;
		flex-direction: column;
		border:0.15vw solid white;
		background:
		linear-gradient(#1616162a, #0e0e0eda),
		url('../assets/noise_black.svg');
		transition: 0.6s ease-out;
		overflow: hidden;
		z-index: 2;
	}

	.menu.start{
		/* transform: rotate3d(0,2,1,60deg) translate3d(-100vw, 100vw, 100vw); */
	}
	
	.menu{
		box-shadow: 15px 15px 2vw #00000079, 15px 15px 1vw #00000073, 5px 5px 0.2vw #00000000;
	}

	.menu:hover{
		transform: translate(0.25vw, 0.25vw);
		box-shadow: 1px 1px 0.4vw #00000059, 1px 1px 0.2vw #00000053, 1px 1px 0.2vw #000000;
	}

	.remove{
		transform: translate(0vw, 100vh);
	}

	.titlebox{
		/* margin-left: 50vw;
		margin-right: 50vw; */
		display: flex;
		margin: 1vw;
	}

	.textbox{
		/* enable if hover effect should not extend to the end of the terminal */
		/* display: flex;  */
		/* justify-content: right; */
	}

	#relink{
		margin-top: 6.5vw;
		display:flex;
		justify-content: flex-end;
	}

	.arrow{
		line-height: 0;
		pointer-events: none;
		position: relative;
		transition: 0.2s;
		user-select: none;
		/* overflow: hidden; */
	}

	.item{
		display: flex;
		margin-left: 2.2vw;
		font-size: 1.5vw;
		font-weight: 500;
		text-align: left;
		text-shadow:0.2vw 0.2vw 0.8vw #ffffff2d, 0.2vw 0.2vw 0.5vw #ffffff41, 0px 0px 0.2vw #ffffff;
		color:#ffffff;
		transition: 1.8s ease-out;
		pointer-events: none;
		cursor: pointer;
		user-select: none;
	}
	.item:hover{
		transform: translate(0.25vw, 0.25vw);
		text-shadow:0px 0px 0.4vw #ffffff7a, 0px 0px 0.2vw #ffffff6e, 0px 0px 0.1vw #ffffffd8;
		opacity: 0.7;
	}
	.item.start{
		transform: translate(-30vw,0vw);
	}

	.item#arrow{
		pointer-events: none;
	}

	.outarrow{
		position: absolute;
		pointer-events: all;
		width: 2vw;
		right: 0.5vw;
		top: 0.5vw;
		transition: 1.2s ease-out;
		-webkit-filter: drop-shadow(0.05vw 0.05vw 0.4vw #ffffff2d) drop-shadow(0.05vw 0.05vw 0.25vw #ffffff41) drop-shadow(0px 0px 0.1vw #ffffff81);
		filter: drop-shadow(0.05vw 0.05vw 0.4vw #ffffff2d) drop-shadow(0.05vw 0.05vw 0.25vw #ffffff41) drop-shadow(0px 0px 0.1vw #ffffff81);
		cursor: pointer;
	}

	.outarrow:hover{
		width: 2.4vw;
		right: 0.3vw;
		top: 0.3vw;
		opacity: 0.7;
		-webkit-filter: drop-shadow(0vw 0vw 0.2vw #ffffff2d) drop-shadow(0vw 0vw 0.12vw #ffffff41) drop-shadow(0px 0px 0.1vw #ffffff50);
		filter: drop-shadow(0vw 0vw 0.2vw #ffffff2d) drop-shadow(0vw 0vw 0.12vw #ffffff41) drop-shadow(0px 0px 0.1vw #ffffff50);
	}

	.outarrow.start{
		transform: translate(5vw,0vw);
	}

	.title{
		font-size: 1.5vw;
		transform: translate(0vw, 0vw);
		font-weight: 500;
		text-shadow:5px 5px 1.5vw #ffffff79, 5px 5px 1vw #ffffff73, 0px 0px 0.2vw #ffffff;
		color:#ffffff;
		transition: 1.8s ease-in-out;
		pointer-events: none;
		cursor: pointer;
		user-select: none;
	}

	.title.end.start{
		transform: translate(15vw,0vw);
	}

	.title.start {
        transform: translate(-15vw,0vw);
    }

	.title:hover{
		transform: translate(0.2vw, 0.2vw);
		text-shadow:0px 0px 0.4vw #ffffff59, 0px 0px 0.2vw #ffffff53, 0px 0px 0.2vw #ffffff;
		opacity: 0.8;
	}

	.title.hover{
		transform: translate(0.2vw, 0.2vw);
		text-shadow:0px 0px 0.4vw #ffffff59, 0px 0px 0.2vw #ffffff53, 0px 0px 0.2vw #ffffff;
		opacity: 0.8;
	}


</style>

<script>
	import $ from "jquery";

	let x = 0;
	let y = 0;
	let curX = 0;
	let curY = 0;

	let targetX = 0;
	let targetY = 0;

	let arrowX = -3.2;
	let arrowTargetX = -3.2;

	let options: string[] = [];
	let lastTab = 1;
	let pointerOneActive = true;

	class pixelTransform {
		boxName: String;
		xOffset: number;
		yOffset: number;

		public constructor(boxName: String, xOffset: number, yOffset: number){
			this.boxName = boxName;
			this.xOffset = xOffset;
			this.yOffset = yOffset;
		}
	}

	document.addEventListener('DOMContentLoaded', () => {
		loadMenu(-1);
		requestAnimationFrame(updateAnimations);
    });

	function loadMenu(menu : number) {
		let firstInit = (menu == -1);
		if (firstInit) {
			menu = 1;
		}
		let titleClass = ".title" + menu;
		let arrowClass = ".arrow" + menu;
		let itemClass = ".item" + menu;
		let menuClass = ".menu" + menu;
		let transition = $(menuClass).css("transition");
		if (!firstInit) {
			$(menuClass).css('pointer-events', 'none');
			$(menuClass).css('transition', '2s cubic-bezier(0.65, 0, 0.35, 1)');
		} else {
			setTimeout(function(){
			$(arrowClass).css('transition', '0.4s ease-out');
			},1000);
		}
		setTimeout(function(){
			$(titleClass).removeClass('start');
			$(menuClass).removeClass('start');
		},5);
		setTimeout(function(){$(menuClass).removeClass('remove');
		},50);
		switch (menu) {
			case 1:
				pointerOneActive = true;
				setTimeout(function(){
					tryEditStartChain(true, "?opt", 0, 100);
				},55);
				setTimeout(function(){
					arrowTargetX = -1.2;
				},55);
				break;
			case 2:
				break;
			case 3:
				setTimeout(function(){
					tryEditStartChain(true, "?afx", 0, 100);
				},55);
				break;
		}
		
		// forced to run after above

		setTimeout(function(){
			$(arrowClass).css('transition', '0.4s ease-out');
		},1500);
		setTimeout(function(){
			$(titleClass).css('pointer-events', 'all');
			$(titleClass).css('transition', '0.4s ease-out');
			$(menuClass).css('transition', transition);
			$(menuClass).css('pointer-events', 'all');
		},2000);
		setTimeout(function(){
			$(itemClass).css('pointer-events', 'all');
			$(arrowClass).css('pointer-events', 'none');
			$(itemClass).css('transition', '0.4s ease-out');
		},2000);
	}

	function unloadMenu(menu : number){
		let titleClass = ".title" + menu;
		let arrowClass = ".arrow" + menu;
		let itemClass = ".item" + menu;
		let menuClass = ".menu" + menu;
		// easing edited at the beginning
		setTimeout(function(){
			$(titleClass).css('pointer-events', 'none');
			$(menuClass).css('pointer-events', 'none');
			$(itemClass).css('pointer-events', 'none');
			$(arrowClass).css('pointer-events', 'none');
			$(itemClass).css('transition', '1.2s ease-in');
			// arrow css to cancel out .item giving the #arrow div its transition
			$(arrowClass).css('transition', '0.4s ease-out');
			$(titleClass).css('transition', '1s ease-in');
			$(menuClass).css('transition', '1.5s ease-in');
			$(titleClass).addClass('start');
			$(menuClass).addClass('start');
		},33);
		switch (menu) {
			case 1:
				pointerOneActive = true;
				setTimeout(function(){
					tryEditStartChain(false, "?opt", 0, 100);
				},50);
				setTimeout(function(){
					arrowTargetX = -3.2;
				},33);
				setTimeout(function(){
					pointerOneActive = false;
				},1000);
				break;
			case 2:

			case 3:
				setTimeout(function(){
					tryEditStartChain(false, "?afx", 0, 100);
				},33);
				break;
		}
		// easting reverts to normal
		setTimeout(function(){
			$(itemClass).css('transition', '1.8s ease-in-out');
			$(titleClass).css('transition', '1.8s ease-out');
			$(menuClass).css('transition', '1.5s ease-out');
		},1000);
	}

	function tryEditStartChain(remove: boolean, name: string, index: number, delay: number) {
		// console.log(index);
		if (tryEditStart(remove, name + index.toString())){
			setTimeout(function(){
				tryEditStartChain(remove, name, index + 1, delay);
			},delay);
		}
	}

	function tryEditStart(remove: boolean, name: string): boolean {
		if (document.getElementById(name) == null) {
			// console.log("failed:" + name);
			return false;
		} else {
			let toChange;
			if (name.substring(0,1) == '?') {
				options.push(name);
				toChange = "#\\" + name;
			} else{
				toChange = "#" + name;
			}
			
			// console.log("success:" + name);
			if (remove){
				$(toChange).removeClass('start');
			} else{
				$(toChange).addClass('start');
			}
			return true;
		}
	}

	let dragging = -1;
	let draggingItem: String;
	let dragInitX: number, dragInitY: number;
	let oldTransition: string;
	let transformsList: pixelTransform[] = new Array();

	document.addEventListener('mousedown', (e) => {
		// document.body.style.userSelect = 'none';
		let target = e.target as HTMLElement;
		let ID = target.id;
		
		if (ID.substring(0,5) == 'mover'){
			dragInitX = e.clientX;
			dragInitY = e.clientY;
			draggingItem = ID.substring(6.);
			
			let addNewBox = true;
			for (var i = 0; i < transformsList.length; i++) {
				if (draggingItem = transformsList[i].boxName) {
					addNewBox = false;
					dragging = i;
					break;
				} 
			}
			if(addNewBox){
				transformsList.push(new pixelTransform(draggingItem,0,0));
				dragging = transformsList.length - 1;
			}
			oldTransition = $("#mainmenudrag").css("transition");
			$("#" + draggingItem).css('transition', '0s ease-out');
		} else {
			dragging = -1;
		}
	})

	document.addEventListener('mouseup', (e) => {
		transformsList[dragging].xOffset = transformsList[dragging].xOffset + x - dragInitX;
		transformsList[dragging].yOffset = transformsList[dragging].yOffset + y - dragInitY;
		$("#" + draggingItem).css('transition', oldTransition);
		dragging = -1;
	})

	document.addEventListener('mousemove', (e) => {
		x = e.clientX;
		y = e.clientY;
		
		if(dragging > -1){
			$("#" + draggingItem).css('transform', 'translate(' + (x - dragInitX + transformsList[dragging].xOffset) + 'px,' + (y - dragInitY + transformsList[dragging].yOffset) + 'px)');
		}
		// options.forEach((option) => {
		// 	option
		// });
	})

	function updateAnimations(){
		// ease catch up -----------------------

		let easeSpeed = 0.05;
		let multi = 0.001;

		arrowX = arrowX * (1 - easeSpeed) + arrowTargetX *  (easeSpeed);

		let w = window.innerWidth;
		let h = window.innerHeight;

		targetX = (x - w/2);
		targetY = (y - h/2);

		curX = curX * (1 - easeSpeed) + targetX *  (easeSpeed);
		curY = curY * (1 - easeSpeed) + targetY *  (easeSpeed);
		

		let containerMulti = -1;
		$("#container-stack-1").css('transform', 'translate(' + containerMulti * multi * curX + 'vw,' + containerMulti * multi * curY + 'vw)');
		
		// below code also moved around the background, but causes a bunch of lag
		// let bodyMulti = 0.5;
		// $("#body").css('transform', 'translate(' + bodyMulti * multi * curX + 'vw,' + bodyMulti * multi * curY + 'vw)');

		// selector arrow ---------------------

		// runs only if main menu open
		let tab = parseInt($("#tabnumber").css("z-index"));

		if (lastTab != tab) {
			switch (lastTab) {
				// remove menu
				case 1:
					if (tab != 1){
						unloadMenu(1);
						let transition = $("#mainmenu").css("transition");
						$("#mainmenu").css('transition', '1s cubic-bezier(0.32, 0, 0.67, 0)');
						$("#mainmenu").css('pointer-events', 'none');

						setTimeout(function(){$("#mainmenu").addClass('remove');
						},50);
						
						setTimeout(function(){
							$("#mainmenu").css('transition', transition);
							$("#mainmenu").css('pointer-events', 'all');
						},1050);
					};
				case 2: 
					if (tab != 2){

					}
				case 3:
					if (tab != 3){
						unloadMenu(3);
						let transition = $("#animationfx").css("transition");
						$("#animationfx").css('transition', '1s cubic-bezier(0.32, 0, 0.67, 0)');
						$("#animationfx").css('pointer-events', 'none');

						setTimeout(function(){$("#animationfx").addClass('remove');
						},50);
						
						setTimeout(function(){
							$("#animationfx").css('transition', transition);
							$("#animationfx").css('pointer-events', 'all');
						},1050);
					};
			}
			// add menu
			switch (tab) {
				case 1:
					if (lastTab != 1){
						loadMenu(1);
					};
				case 2:

				case 3:
					if (lastTab != 3){
						loadMenu(3);
					};
			}
		}
		if (pointerOneActive) {
			let mainmenu = document.getElementById("mainmenu");
			// console.log(arrowX);
			if (mainmenu != null) {
				let mainmenuRect = mainmenu.getBoundingClientRect();
				let element = document.getElementById("?opt0");
				let elementSecond = document.getElementById("?opt1");
				let elementSecondLast = document.getElementById("?opt2");
				let elementLast = document.getElementById("?opt3");
				if (element != null && elementSecond != null && elementSecondLast != null && elementLast != null) {
					let rect = element.getBoundingClientRect();
					let rectSecond = elementSecond.getBoundingClientRect();
					let rectSecondLast = elementSecondLast.getBoundingClientRect();
					let rectGap = rect.bottom - rect.top;
					let rectLast = elementLast.getBoundingClientRect();
					let singleGapTop = (rectLast.top - rectSecondLast.top);
					let singleGapBottom = (rectSecond.top - rect.top);
					let yPos = Math.min(
						Math.max(
							y - (rect.bottom - rect.top) / 4, 
							Math.max(
								(rect.top + rect.bottom) / 2, 
								(rectSecond.top + rectSecond.bottom) / 2 - singleGapTop) 
								- (window.innerHeight / 100)
						), 
						Math.min(
							Math.min(
								(rectLast.top + rectLast.bottom) / 2),
								(rectSecondLast.top + rectSecondLast.bottom) / 2 + singleGapBottom)
								- (window.innerHeight / 200)
					) - mainmenuRect.top - 2 * rectGap;
					// console.log("target: " + arrowTargetX);
					// console.log("current: " + arrowX);
					$(".arrow1").css('transform', 'translate(' + arrowX + 'vw,' + yPos + 'px)');
				}
			}
		}
		lastTab = tab;
		requestAnimationFrame(updateAnimations);
	}
</script>